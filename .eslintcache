[{"C:\\Users\\Shahzad Majeed\\project\\poki\\src\\index.js":"1","C:\\Users\\Shahzad Majeed\\project\\poki\\src\\App.js":"2"},{"size":165,"mtime":1609692318675,"results":"3","hashOfConfig":"4"},{"size":982,"mtime":1609693637284,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ltsm2x",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shahzad Majeed\\project\\poki\\src\\index.js",[],"C:\\Users\\Shahzad Majeed\\project\\poki\\src\\App.js",["10","11"],{"ruleId":"12","severity":1,"message":"13","line":9,"column":1,"nodeType":"14","endLine":9,"endColumn":10,"suggestions":"15"},{"ruleId":"12","severity":1,"message":"16","line":10,"column":5,"nodeType":"17","endLine":14,"endColumn":6},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setname'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [num] as a second argument to the useEffect Hook.","Identifier",["18"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression",{"desc":"19","fix":"20"},"Add dependencies array: [num]",{"range":"21","text":"22"},[378,378],", [num]"]